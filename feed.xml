<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://rayanfam.com/</id><title>Rayanfam Blog</title><subtitle>We write about Windows Internals, Hypervisors, Linux, and Networks.</subtitle> <updated>2024-12-13T22:15:05+00:00</updated> <author> <name>Rayanfam Blog</name> <uri>https://rayanfam.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://rayanfam.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://rayanfam.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2024 Rayanfam Blog </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Building Silicon Dreams: An Adventure in Hardware Design</title><link href="https://rayanfam.com/topics/hardware-design-stack/" rel="alternate" type="text/html" title="Building Silicon Dreams: An Adventure in Hardware Design" /><published>2023-10-07T00:00:00+00:00</published> <updated>2023-10-08T09:16:09+00:00</updated> <id>https://rayanfam.com/topics/hardware-design-stack/</id> <content src="https://rayanfam.com/topics/hardware-design-stack/" /> <author> <name>{"name"=>"Sina Karvandi, Saleh Khalaj Monfared", "link"=>"https://twitter.com/Intel80x86"}</name> </author> <category term="hardware" /> <summary> Story Time Exploring the internals of processors has long been a fascination of mine. After spending a lot of time experiencing different processor features like hypervisor and configuring different x86 MSRs, I was seeking to find a way of knowing how exactly these concepts and configurations are made and how they work on the silicon. Initially, my knowledge of hardware design was limited t... </summary> </entry> <entry><title>HyperDbg’s One Thousand and One Nights</title><link href="https://rayanfam.com/topics/hyperdbg-one-thousand-and-one-nights/" rel="alternate" type="text/html" title="HyperDbg’s One Thousand and One Nights" /><published>2022-06-13T00:00:00+00:00</published> <updated>2024-07-13T12:45:21+00:00</updated> <id>https://rayanfam.com/topics/hyperdbg-one-thousand-and-one-nights/</id> <content src="https://rayanfam.com/topics/hyperdbg-one-thousand-and-one-nights/" /> <author> <name>{"name"=>"Saleh Monfared, and Sina Karvandi", "link"=>"https://twitter.com/sal3hh"}</name> </author> <category term="debugger" /> <category term="debugging" /> <category term="hyperdbg" /> <category term="hypervisor" /> <summary> This post is a different one, in that, it is more of an overview, rather than a technical post. Here, we provide a high-level summary of HyperDbg Debugger, its principles, and perspective. Introduction HyperDbg is an open-source, hypervisor-assisted debugger that can be used to debug both user-mode and kernel-mode applications. The closest similar product available to HyperDbg is WinDbg. Hy... </summary> </entry> <entry><title>Hypervisor From Scratch – Part 8: How To Do Magic With Hypervisor!</title><link href="https://rayanfam.com/topics/hypervisor-from-scratch-part-8/" rel="alternate" type="text/html" title="Hypervisor From Scratch – Part 8: How To Do Magic With Hypervisor!" /><published>2020-03-24T00:00:00+00:00</published> <updated>2024-07-13T13:14:26+00:00</updated> <id>https://rayanfam.com/topics/hypervisor-from-scratch-part-8/</id> <content src="https://rayanfam.com/topics/hypervisor-from-scratch-part-8/" /> <author> <name>{"name"=>"Sina Karvandi", "link"=>"https://twitter.com/Intel80x86"}</name> </author> <category term="cpu" /> <category term="hypervisor" /> <category term="tutorials" /> <summary> If you’re looking to use a hypervisor for analysis and reverse engineering tasks, check out HyperDbg Debugger. It’s a hypervisor-based debugger designed specifically for analyzing, fuzzing, and reversing applications. A free and comprehensive tutorial on hypervisor-based reverse engineering is available at OpenSecurityTraining2’s website (preferred) and YouTube, which demonstrates numerous pr... </summary> </entry> <entry><title>Hypervisor From Scratch – Part 7: Using EPT &amp; Page-Level Monitoring Features</title><link href="https://rayanfam.com/topics/hypervisor-from-scratch-part-7/" rel="alternate" type="text/html" title="Hypervisor From Scratch – Part 7: Using EPT &amp; Page-Level Monitoring Features" /><published>2020-01-20T00:00:00+00:00</published> <updated>2024-07-13T13:14:26+00:00</updated> <id>https://rayanfam.com/topics/hypervisor-from-scratch-part-7/</id> <content src="https://rayanfam.com/topics/hypervisor-from-scratch-part-7/" /> <author> <name>{"name"=>"Sina Karvandi", "link"=>"https://twitter.com/Intel80x86"}</name> </author> <category term="cpu" /> <category term="hypervisor" /> <category term="tutorials" /> <summary> If you’re looking to use a hypervisor for analysis and reverse engineering tasks, check out HyperDbg Debugger. It’s a hypervisor-based debugger designed specifically for analyzing, fuzzing, and reversing applications. A free and comprehensive tutorial on hypervisor-based reverse engineering is available at OpenSecurityTraining2’s website (preferred) and YouTube, which demonstrates numerous pr... </summary> </entry> <entry><title>Reversing Windows Internals (Part 1) - Digging Into Handles, Callbacks &amp; ObjectTypes</title><link href="https://rayanfam.com/topics/reversing-windows-internals-part1/" rel="alternate" type="text/html" title="Reversing Windows Internals (Part 1) - Digging Into Handles, Callbacks &amp; ObjectTypes" /><published>2019-12-09T00:00:00+00:00</published> <updated>2024-07-13T12:45:21+00:00</updated> <id>https://rayanfam.com/topics/reversing-windows-internals-part1/</id> <content src="https://rayanfam.com/topics/reversing-windows-internals-part1/" /> <author> <name>{"name"=>"Sina Karvandi", "link"=>"https://twitter.com/Intel80x86"}</name> </author> <category term="tutorials" /> <category term="windows" /> <summary> Introduction Welcome to the first part of a series of posts about Exploring &amp;amp; Reversing Windows Concepts and Internals. If you reach here then you’re probably a security researcher or a programmer and this post and similar posts can help you understand what’s going on in some parts of Windows when you use objects with different users and credentials and what you can expect from Windows a... </summary> </entry> </feed>
